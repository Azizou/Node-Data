/// <reference path="../typings/mongoose/mongoose.d.ts" />

import * as RM from './rolemodel';
import {onetomany, manytoone, manytomany} from '../decorators/association';
import {document} from '../decorators/document'; 
import {field} from '../decorators/field'; 
import {IUser} from './user.ts';
import {Types} from 'mongoose';
import {Strict} from '../enums/document-strict';
import * as r from './rolemodel';

@document({ name: 'users', strict: Strict.true })
export class UserModel {
    @field({ primary: true, autogenerated: true })
    _id: Types.ObjectId;

    @field()
    name: string;

    @field({ itemType: String})
    courses: Array<string>;

    @field()
    email: string;

    @field()
    password: string;

    @field()
    age: number;

    @onetomany({ biDirectional: false, rel: 'roles', itemType: RM, embedded: false })
    roles: Array<RM.RoleModel>;

    _links: any;  
    
    // constructor(){
    //     this._id=0;
    //     this.name="";
    //     this.roles=new Array<RoleModel>();
    // }
    constructor(userDto: IUser) {
        this._links = {};
        this._id = <any>userDto._id;
        this.name = userDto.name;
        //this.age = userDto.age;
        //this.password = userDto.password;
        //this.email = userDto.email;
        if (userDto.roles)
            this.roles = userDto.roles;
        else
            this.roles = new Array<RM.RoleModel>();
    }
}

export default UserModel;
