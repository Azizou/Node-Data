{"version":3,"sources":["decorators/association.ts"],"names":["onetomany","manytoone","manytomany"],"mappings":"AACA,4CAA4C;AAE5C,mBAA0B,EAAkB;QAAPA,MAAMA;IACvCA,MAAMA,CAACA,UAASA,MAAcA,EAAEA,GAAWA;QACvC,iBAAiB;QAEvB,uGAAuG;QAEvG,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAErB,kBAAkB;QAClB,IAAI,MAAM,GAAG;YACX,OAAO,CAAC,GAAG,CAAC,UAAQ,GAAG,YAAO,IAAM,CAAC,CAAC;YACtC,IAAI,OAAO,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAClD,IAAI,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YAChE,IAAI,QAAQ,GAAC,EAAE,CAAC;YAChB,EAAE,CAAA,CAAa,IAAK,CAAC,GAAG,CAAC,CACzB,CAAC;gBACF,QAAQ,CAAC,MAAM,CAAC,GAAC,GAAG,GAAC,YAAY,GAAC,GAAG,GAAe,IAAK,CAAC,GAAG,CAAC;gBAC9D,IAAI,CAAC,QAAQ,CAAC,GAAC,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAC,QAAQ,CAAC;YAC/B,CAAC;YACF,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;QAEF,kBAAkB;QAClB,IAAI,MAAM,GAAG,UAAU,MAAM;YAC3B,OAAO,CAAC,GAAG,CAAC,UAAQ,GAAG,YAAO,MAAQ,CAAC,CAAC;YACxC,EAAE,CAAA,CAAC,CAAa,IAAK,CAAC,MAAM,CAAC,CAC7B,CAAC;gBACe,IAAK,CAAC,MAAM,GAAC,EAAE,CAAC;YAChC,CAAC;YACD,IAAI,KAAK,GAAa,IAAK,CAAC,MAAM,CAAC;YACnC,IAAI,OAAO,GAAC,EAAE,CAAC;YACf,OAAO,CAAC,MAAM,CAAC,GAAC,QAAQ,GAAe,IAAK,CAAC,GAAG,GAAG,GAAG,GAAE,GAAG,CAAC;YAE5D,KAAK,CAAC,GAAG,CAAC,GAAC,OAAO,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,GAAC,KAAK,CAAC;YACrB,IAAI,GAAG,MAAM,CAAC;QAChB,CAAC,CAAC;QAEF,mBAAmB;QACnB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAErB,6CAA6C;YAC7C,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE;gBACjC,GAAG,EAAE,MAAM;gBACX,GAAG,EAAE,MAAM;gBACX,UAAU,EAAE,IAAI;gBAChB,YAAY,EAAE,IAAI;aACnB,CAAC,CAAC;QACL,CAAC;QAGK,qEAAqE;IACzE,CAAC,CAAAA;AACLA,CAACA;AAtDe,iBAAS,YAsDxB,CAAA;AAED;IACIC,MAAMA,CAACA,UAASA,MAAcA,EAAEA,WAAmBA;QAC/C,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;IAC/E,CAAC,CAAAA;AACLA,CAACA;AAJe,iBAAS,YAIxB,CAAA;AAED;IACIC,MAAMA,CAACA,UAASA,MAAcA,EAAEA,WAAmBA;QAC/C,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;IAChF,CAAC,CAAAA;AACLA,CAACA;AAJe,kBAAU,aAIzB,CAAA;AAED,+BAA+B;AAC/B,wGAAwG;AACxG,iDAAiD;AACjD,gEAAgE;AAChE,WAAW;AACX,yDAAyD;AACzD,kFAAkF;AAClF,uGAAuG;AACvG,mFAAmF;AACnF,uHAAuH;AACvH,YAAY;AACZ,6BAA6B;AAC7B,QAAQ;AACR,IAAI;AACJ,GAAG;AACH,gCAAgC;AAChC,wGAAwG;AACxG,iDAAiD;AACjD,iEAAiE;AACjE,WAAW;AACX,yDAAyD;AACzD,kFAAkF;AAClF,uGAAuG;AACvG,mFAAmF;AACnF,uHAAuH;AACvH,aAAa;AACb,QAAQ;AACR,IAAI","file":"decorators/association.js","sourcesContent":["import {ModelBase} from '../models/modelBase.ts';\r\n//import * as Utils from \"./metadata/utils\";\r\n\r\nexport function onetomany({mappedBy: string}) {\r\n    return function(target: Object, key: string){\r\n        // property value\r\n        \r\n  //Utils.addMetaData(<Utils.IMetaTarget>target, \"field\", Utils.DecoratorType.PROPERTY, null, key);      \r\n        \r\n  var _val = this[key];\r\n\r\n  // property getter\r\n  var getter = function () {\r\n    console.log(`Get: ${key} => ${_val}`);\r\n    var Reflect = require('reflect-metadata/Reflect');\r\n    var propTypeName = Reflect.getMetadata(\"design:type\", this, key);\r\n     var selfLink={};\r\n     if((<ModelBase>_val)._id)\r\n     {\r\n    selfLink[\"href\"]=\"/\"+propTypeName+\"/\" + (<ModelBase>_val)._id;\r\n    _val[\"_links\"]={};\r\n    _val[\"_links\"][\"self\"]=selfLink;\r\n     }\r\n    return _val;\r\n  };\r\n\r\n  // property setter\r\n  var setter = function (newVal) {\r\n    console.log(`Set: ${key} => ${newVal}`);\r\n    if(!(<ModelBase>this)._links)\r\n    {\r\n        (<ModelBase>this)._links={};\r\n    }\r\n    var links=(<ModelBase>this)._links;\r\n    var relLink={};\r\n    relLink[\"href\"]=\"/user/\" + (<ModelBase>this)._id + \"/\"+ key;\r\n    \r\n    links[key]=relLink;\r\n    this[\"_links\"]=links;\r\n    _val = newVal;\r\n  };\r\n\r\n  // Delete property.\r\n  if (delete this[key]) {\r\n\r\n    // Create new property with getter and setter\r\n    Object.defineProperty(target, key, {\r\n      get: getter,\r\n      set: setter,\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n  }\r\n        \r\n        \r\n        //console.log('onetomany - propertyKey: ', key, ', target:', target);\r\n    }\r\n}\r\n\r\nexport function manytoone() {\r\n    return function(target: Object, propertyKey: string){\r\n        console.log('manytoone - propertyKey: ', propertyKey, ', target:', target);\r\n    }\r\n}\r\n\r\nexport function manytomany() {\r\n    return function(target: Object, propertyKey: string){\r\n        console.log('manytomany - propertyKey: ', propertyKey, ', target:', target);\r\n    }\r\n}\r\n\r\n// export function manytoone(){\r\n//     return function(target: Function, propertyKey: string, descriptor: TypedPropertyDescriptor<any>){\r\n//         var originalMethod = descriptor.value;\r\n//         console.log('manytoone - on method: ' + propertyKey);\r\n//         \r\n//          descriptor.value = function(...args: any[]) {\r\n//             console.log(\"The method args are: \" + JSON.stringify(args)); // pre\r\n//             var result = originalMethod.apply(this, args);               // run and store the result\r\n//             console.log(\"The return value is: \" + result);               // post\r\n//             return result;                                               // return the result of the original method\r\n//         }\r\n//         return descriptor;\r\n//     }\r\n// }\r\n// \r\n// export function manytomany(){\r\n//     return function(target: Function, propertyKey: string, descriptor: TypedPropertyDescriptor<any>){\r\n//         var originalMethod = descriptor.value;\r\n//         console.log('manytomany - on method: ' + propertyKey);\r\n//         \r\n//          descriptor.value = function(...args: any[]) {\r\n//             console.log(\"The method args are: \" + JSON.stringify(args)); // pre\r\n//             var result = originalMethod.apply(this, args);               // run and store the result\r\n//             console.log(\"The return value is: \" + result);               // post\r\n//             return result;                                               // return the result of the original method\r\n//         };\r\n//     }\r\n// }"],"sourceRoot":"/source/"}