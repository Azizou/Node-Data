{"version":3,"sources":["repositories/userRepository.ts"],"names":[],"mappings":"AAAA,8CAA8C;AAC9C,wCAAwC;AACxC,0CAA0C;AAC1C,iDAAiD;AACjD,2CAA2C;AAE3C,yCAAyC;AAEzC,wBAAwB;AAExB,iDAAiD;AACjD,uCAAuC;AACvC,iBAAiB;AACjB,wBAAwB;AACxB,UAAU;AACV,cAAc;AACd,2BAA2B;AAC3B,UAAU;AACV,UAAU;AACV,MAAM;AAGN,+CAA+C;AAC/C,mCAAmC;AACnC,iBAAiB;AACjB,yBAAyB;AACzB,UAAU;AACV,cAAc;AACd,2BAA2B;AAC3B,UAAU;AACV,UAAU;AACV,MAAM;AACN,IAAI;AACJ,2BAA2B;AAC3B,4CAA4C;AAC5C,kCAAkC","file":"repositories/userRepository.js","sourcesContent":["// /// <reference path=\"../typings/tsd.d.ts\"/>\r\n// import * as mongoose from \"mongoose\";\r\n// import Config = require( \"../config\" );\r\n// import User = require(\"../schema/userSchema\");\r\n// import {IUser} from '../models/user.ts';\r\n\r\n// mongoose.connect(Config.DbConnection);\r\n\r\n// class userRepository{\r\n\r\n//   static addUser(user : IUser, cb : Function){\r\n//     User.create(user, (err,model)=>{\r\n//       if(err){\r\n//         cb(err,null);\r\n//       }\r\n//       else{\r\n//         cb(null, model);\r\n//       }\r\n//     });\r\n//   }\r\n\r\n\r\n//   static getAllUsers(cb : Function) :  any {\r\n//     User.find({},(err,models)=>{\r\n//       if(err){\r\n//         cb(err, null);\r\n//       }\r\n//       else{\r\n//         cb(null,models);\r\n//       }\r\n//     });\r\n//   }\r\n// }\r\n// export = userRepository;\r\n// // findone , findall , save baseInterface\r\n// // interface , baseInterFace ()\r\n"],"sourceRoot":"/source/"}